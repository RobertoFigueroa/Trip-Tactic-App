{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport reducer from \"./reducers\";\nimport mainSaga from \"./sagas\";\nimport { AsyncStorage } from '@react-native-community/async-storage';\nexport var configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var persistedReducer = persistReducer({\n    key: 'root',\n    storage: AsyncStorage,\n    whitelist: []\n  }, reducer);\n  var store = createStore(persistedReducer, applyMiddleware(sagaMiddleware));\n  var persistor = persistStore(store);\n  sagaMiddleware.run(mainSaga);\n  return {\n    store: store,\n    persistor: persistor\n  };\n};","map":{"version":3,"sources":["/home/roberto/Desktop/UVG 2020/WEB/Trip-Tactic-App/trip-tactic/store.js"],"names":["createStore","applyMiddleware","createSagaMiddleware","persistStore","persistReducer","reducer","mainSaga","AsyncStorage","configureStore","sagaMiddleware","persistedReducer","key","storage","whitelist","store","persistor","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SACEC,YADF,EAEEC,cAFF,QAGO,eAHP;AAKA,OAAOC,OAAP;AACA,OAAOC,QAAP;AACA,SAASC,YAAT,QAA6B,uCAA7B;AAGA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAClC,MAAMC,cAAc,GAAGP,oBAAoB,EAA3C;AACA,MAAMQ,gBAAgB,GAAGN,cAAc,CACrC;AACEO,IAAAA,GAAG,EAAE,MADP;AAEEC,IAAAA,OAAO,EAAEL,YAFX;AAGEM,IAAAA,SAAS,EAAE;AAHb,GADqC,EAMrCR,OANqC,CAAvC;AASA,MAAMS,KAAK,GAAGd,WAAW,CACvBU,gBADuB,EAEvBT,eAAe,CAACQ,cAAD,CAFQ,CAAzB;AAKA,MAAMM,SAAS,GAAGZ,YAAY,CAACW,KAAD,CAA9B;AAEAL,EAAAA,cAAc,CAACO,GAAf,CAAmBV,QAAnB;AAEA,SAAO;AAAEQ,IAAAA,KAAK,EAALA,KAAF;AAASC,IAAAA,SAAS,EAATA;AAAT,GAAP;AACD,CArBM","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport {\n  persistStore,\n  persistReducer,\n} from 'redux-persist';\n\nimport reducer from './reducers';\nimport mainSaga from './sagas';\nimport { AsyncStorage } from '@react-native-community/async-storage';\n\n\nexport const configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const persistedReducer = persistReducer(\n    {\n      key: 'root',\n      storage: AsyncStorage,\n      whitelist: [],\n    },\n    reducer,\n  );\n\n  const store = createStore(\n    persistedReducer,\n    applyMiddleware(sagaMiddleware),\n  );\n\n  const persistor = persistStore(store);\n\n  sagaMiddleware.run(mainSaga);\n\n  return { store, persistor };\n}"]},"metadata":{},"sourceType":"module"}